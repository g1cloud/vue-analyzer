[
  {
    "filePath": "/Users/kimos/git/temp/vue-analyzer/test-data/OptionsApiComponent.vue",
    "scriptType": "script",
    "styleCount": 0,
    "components": [],
    "imports": [],
    "definedProps": [],
    "data": [
      "message"
    ],
    "computed": [
      "reversedMessage"
    ],
    "methods": [
      "reverseMessage"
    ]
  },
  {
    "filePath": "/Users/kimos/git/temp/vue-analyzer/test-data/CompositionApiComponent.vue",
    "scriptType": "script setup",
    "styleCount": 0,
    "components": [],
    "imports": [
      "vue"
    ],
    "definedProps": [],
    "data": [
      "message"
    ],
    "computed": [
      "reversedMessage"
    ],
    "methods": [
      "reverseMessage"
    ]
  },
  {
    "filePath": "/Users/kimos/git/temp/vue-analyzer/test-data/BrandDetail.vue",
    "scriptType": "script setup",
    "styleCount": 0,
    "components": [
      {
        "name": "BSButton",
        "props": {
          ":caption": "{key: 'ecp.changeHist'}",
          "button-color": "gray",
          "class": "ml-4",
          "data-id": "changeHistBtn",
          "@click": "changeHist"
        }
      },
      {
        "name": "BSButton",
        "props": {
          ":caption": "{ key: 'ecp.logicallyDeleted' }",
          ":disabled": "brandStatus?.deleted",
          "button-color": "red",
          "class": "ml-4",
          "data-id": "delete",
          "@click": "remove"
        }
      },
      {
        "name": "BSTabSheet",
        "props": {
          "v-model": "currentTabId",
          ":tabs": "tabs",
          "class": "detail-top colored-bg"
        }
      },
      {
        "name": "BrandDetailBasic",
        "props": {
          ":brand-code": "brandCode",
          ":brand-status": "brandStatus",
          "tab-id": "basic",
          "@status-changed": "refreshBrandStatus"
        }
      },
      {
        "name": "PageBuilderContentTab",
        "props": {
          ":area-codes": "authorizedAreaCodes",
          ":available-widgets": "availableWidgets",
          ":locales": "dataLocaleService.getGlobalLocales()",
          ":resource-id": "brandCode",
          ":top-bar-left-selector": "`[data-id=${topBarId.left}]`",
          ":top-bar-right-selector": "`[data-id=${topBarId.right}]`",
          "content-scope": "Area",
          "resource-type": "Brand",
          "tab-id": "content"
        }
      },
      {
        "name": "BrandSeo",
        "props": {
          ":brand-code": "brandCode",
          ":brand-status": "brandStatus",
          "tab-id": "seo"
        }
      },
      {
        "name": "BrandDetailProduct",
        "props": {
          ":brand-code": "brandCode",
          "tab-id": "prod"
        }
      }
    ],
    "imports": [
      "@/main/page/basic-info/brand/BrandDetail.gen.ts",
      "@g1cloud/bluesea",
      "@/main/page/basic-info/brand/BrandDetailBasic.vue",
      "vue",
      "vue-router",
      "@/main/page/basic-info/brand/BrandDetailProduct.vue",
      "@/main/page/basic-info/brand/service/brandService.ts",
      "@/main/page/basic-info/brand/BrandSeo.vue",
      "@/main/env/userDataService.ts",
      "@/common/uiUtil.ts",
      "@/main/page/cms/common/PageBuilderContentTab.vue",
      "@/page-builder/widget/typeAdapter.ts",
      "@/page-builder/widgetList.ts",
      "@/common/errorService.ts",
      "@/common/transactionInfo.ts"
    ],
    "definedProps": [],
    "data": [
      "currentTabId",
      "brandStatus",
      "authorizedAreaCodes",
      "brandContext"
    ],
    "computed": [
      "brandCode"
    ],
    "methods": []
  },
  {
    "filePath": "/Users/kimos/git/temp/vue-analyzer/test-data/BaseButton.vue",
    "scriptType": "script setup",
    "styleCount": 1,
    "components": [],
    "imports": [],
    "definedProps": [
      "caption",
      "disabled"
    ],
    "data": [],
    "computed": [],
    "methods": []
  },
  {
    "filePath": "/Users/kimos/git/temp/vue-analyzer/test-data/App.vue",
    "scriptType": "script",
    "styleCount": 1,
    "components": [],
    "imports": [],
    "definedProps": [],
    "data": [
      "msg"
    ],
    "computed": [],
    "methods": []
  }
]